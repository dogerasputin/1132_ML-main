wandb: Currently logged in as: 11111239 (11111239-national-taitung-university) to https://api.wandb.ai. Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.19.11
wandb: Run data is saved locally in C:\Users\Lu\RepViT\wandb\run-20250531_144837-9x8lsgcv
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run northern-dawn-3
wandb:  View project at https://wandb.ai/11111239-national-taitung-university/repvit
wandb:  View run at https://wandb.ai/11111239-national-taitung-university/repvit/runs/9x8lsgcv
C:\Users\Lu\anaconda3\envs\repvit310\lib\site-packages\torch\utils\data\dataloader.py:626: UserWarning: This DataLoader will create 10 worker processes in total. Our suggested max number of worker in current system is 8 (`cpuset` is not taken into account), which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(
C:\Users\Lu\anaconda3\envs\repvit310\lib\site-packages\timm\utils\cuda.py:40: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  self._scaler = torch.cuda.amp.GradScaler()
Not using distributed mode
Using nb_classes = 200
Creating model: repvit_m0_9
number of params: 4795560
RepViT(
  (features): ModuleList(
    (0): Sequential(
      (0): Conv2d_BN(
        (c): Conv2d(3, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): GELU(approximate='none')
      (2): Conv2d_BN(
        (c): Conv2d(24, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48, bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), groups=48)
          (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(48, 16, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(16, 48, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2-3): 2 x RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48, bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), groups=48)
          (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(96, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (4): RepViTBlock(
      (token_mixer): Sequential(
        (0): Conv2d_BN(
          (c): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)
          (bn): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
        (2): Conv2d_BN(
          (c): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (5): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), groups=96)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(96, 24, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(24, 96, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (6-7): 2 x RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96, bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(96, 96, kernel_size=(1, 1), stride=(1, 1), groups=96)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(192, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (8): RepViTBlock(
      (token_mixer): Sequential(
        (0): Conv2d_BN(
          (c): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
          (bn): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
        (2): Conv2d_BN(
          (c): Conv2d(96, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (9): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (10): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (11): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (12): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (13): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (14): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (15): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (16): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (17): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (18): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (19): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (20): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (21): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(192, 48, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(48, 192, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (22-23): 2 x RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=192, bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(192, 192, kernel_size=(1, 1), stride=(1, 1), groups=192)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (24): RepViTBlock(
      (token_mixer): Sequential(
        (0): Conv2d_BN(
          (c): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=192, bias=False)
          (bn): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
        (2): Conv2d_BN(
          (c): Conv2d(192, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(384, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (25): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), groups=384)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): SEModule(
          (fc1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
          (bn): Identity()
          (act): ReLU(inplace=True)
          (fc2): Conv2d(96, 384, kernel_size=(1, 1), stride=(1, 1))
          (gate): Sigmoid()
        )
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(384, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (26): RepViTBlock(
      (token_mixer): Sequential(
        (0): RepVGGDW(
          (conv): Conv2d_BN(
            (c): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=384, bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (conv1): Conv2d(384, 384, kernel_size=(1, 1), stride=(1, 1), groups=384)
          (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): Identity()
      )
      (channel_mixer): Residual(
        (m): Sequential(
          (0): Conv2d_BN(
            (c): Conv2d(384, 768, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (1): GELU(approximate='none')
          (2): Conv2d_BN(
            (c): Conv2d(768, 384, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (classifier): Classfier(
    (classifier): BN_Linear(
      (bn): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (l): Linear(in_features=384, out_features=200, bias=True)
    )
  )
)C:\Users\Lu\RepViT\engine.py:46: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast():
C:\Users\Lu\RepViT\engine.py:91: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast():
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
forrtl: error (200): program aborting due to window-CLOSE event
Image              PC                Routine            Line        Source             
KERNELBASE.dll     00007FF9AA28CE37  Unknown               Unknown  Unknown
KERNEL32.DLL       00007FF9ABFB257D  Unknown               Unknown  Unknown
ntdll.dll          00007FF9ACD4AF08  Unknown               Unknown  Unknown
